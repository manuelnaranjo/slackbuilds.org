#!/bin/sh

# Slackware build script for Lua

# Written by Menno Duursma
# Modified by the SlackBuilds.org project
# Modified by Aaron W. Hsu
# Updated by ponce

# This program is free software. It comes without any warranty.
# Granted WTFPL, Version 2, as published by Sam Hocevar. See
# http://sam.zoy.org/wtfpl/COPYING for more details.

PRGNAM=lua
VERSION=${VERSION:-5.1.5}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

case "${HOST_TRIPLET}" in
  i686-w64-mingw32)
    LIBDIRSUFFIX=""
    ;;
  x86_64-w64-mingw32)
    LIBDIRSUFFIX="64"
    ;;
esac

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-${VERSION}.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .

# Fix up a to-be-installed header and the pkgconfig file
sed -i "s|/${PREFIX}/local|/${PREFIX}|" src/luaconf.h
sed -i "s|lib/lua|lib$LIBDIRSUFFIX/lua|" src/luaconf.h

if echo "${HOST_TRIPLET}" | grep -qv mingw; then
  make linux \
    CFLAGS="$SLKCFLAGS -fPIC \$(MYCFLAGS)" \
    INSTALL_TOP=/${PREFIX} \
    INSTALL_LIB=/${PREFIX}/lib${LIBDIRSUFFIX} \
    INSTALL_LMOD=/${PREFIX}/share/lua/5.1 \
    INSTALL_CMOD=/${PREFIX}/lib${LIBDIRSUFFIX}/lua/5.1

  make linux install \
    CFLAGS="$SLKCFLAGS -fPIC \$(MYCFLAGS)" \
    INSTALL_TOP=$PKG/${PREFIX} \
    INSTALL_LIB=$PKG/${PREFIX}/lib${LIBDIRSUFFIX} \
    INSTALL_LMOD=$PKG/${PREFIX}/share/lua/5.1 \
    INSTALL_CMOD=$PKG/${PREFIX}/lib${LIBDIRSUFFIX}/lua/5.1

  # Now let's build the shared library
  mkdir -p shared
  cd shared
    ar -x $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/liblua.a
    gcc -ldl -lreadline -lhistory -lncurses -lm -shared *.o -o liblua.so.$VERSION
    cp -a liblua.so.$VERSION $PKG/${PREFIX}/lib${LIBDIRSUFFIX}
    ( cd $PKG/${PREFIX}/lib${LIBDIRSUFFIX}
      ln -s liblua.so.$VERSION liblua.so.5.1
      ln -s liblua.so.$VERSION liblua.so.5
      ln -s liblua.so.$VERSION liblua.so
    )
  cd ..
else
  sed -i '/#define OUTPUT[ ]\+PROGNAME "\.out"/ s/\.out/.exe/' src/luac.c

  make -C src -f ${CWD}/src_makefile -j7 \
    CC="${HOST_TRIPLET}-gcc" \
    AR="${HOST_TRIPLET}-ar"

  make -C src -f ${CWD}/src_makefile \
    BIN_DIR="${PKG}/${PREFIX}/bin" \
    INCLUDE_DIR="${PKG}/${PREFIX}/include" \
    LIB_DIR="${PKG}/${PREFIX}/lib${LIBDIRSUFFIX}" \
    install
fi

PC_DIR="$PKG/${PREFIX}/lib${LIBDIRSUFFIX}/pkgconfig"
mkdir -p ${PC_DIR}
cat $CWD/lua.pc > ${PC_DIR}/lua.pc
sed -i "s|/usr/local|/${PREFIX}|" ${PC_DIR}/lua.pc
sed -i "s|prefix}/lib|prefix}/lib${LIBDIRSUFFIX}|g" ${PC_DIR}/lua.pc
unset PC_DIR

find $PKG | xargs file | egrep -e "executable|shared object" \
  | grep ${HOST_EXE_FORMAT} | cut -f 1 -d : \
  | xargs ${HOST_STRIP} --strip-unneeded 2> /dev/null || true

mkdir -p ${PKG}/${PREFIX}/man/man1
cp doc/lua.1 ${PKG}/${PREFIX}/man/man1
gzip -9 ${PKG}/${PREFIX}/man/man1/lua.1

mkdir -p $PKG/${PREFIX}/doc/$PRGNAM-$VERSION/html
cp -a doc/*.html doc/logo.gif doc/lua.css $PKG/${PREFIX}/doc/$PRGNAM-$VERSION/html
cat $CWD/$PRGNAM.SlackBuild > $PKG/${PREFIX}/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

cat ${CWD}/lua.yypkg.script | sed \
  -e "s/%{PKG}/lua/" \
  -e "s/%{HST}/${HOST_TRIPLET}/" \
  -e "s/%{TGT}//" \
  -e "s/%{VER}/$(echo ${VERSION} | tr . ' ')/" \
  -e "s/%{BUILD}/${BUILD}/" \
  -e "s/%{DESCR}/${DESCR:-"No description"}/" \
  | makeypkg -o ${YYOUTPUT} -script - "${PKG}/${PREFIX}"

