#!/bin/sh

# Slackware build script for ffmpeg

# Copyright 2010-2013 Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Originally written by core (eroc@linuxmail.org)
# Modified by Robby Workman <rworkman@slackbuilds.org>

PRGNAM=ffmpeg
VERSION=${VERSION:-2.2.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

SLKCFLAGS="-O2"

# environment sanity checks
TEXI2HTML=$(which texi2html 2>/dev/null)

if [ "$TEXI2HTML" = "" ]; then
  echo "Could not find texi2html! Please make sure to have tetex or texlive installed"
  echo "and that texi2html is in PATH."
  exit 1
fi

# --enable-runtime-cpu is meant for libswscale only and
# has no influence on the other parts of ffmpeg so there's
# not really a point in bothering
PKGARCH=$(uname -m)_custom

# Configure ffmpeg features not autodetected by default
# Unfortunately ffmpeg's configure doesn't support --enable-feature=yes
# syntax, so we have to do it the complicated way :/

libcelt=""    ; [ "${CELT:-no}" != "no" ]         && libcelt="--enable-libcelt"
libdc1394=""  ; [ "${DC1394:-no}" != "no" ]       && libdc1394="--enable-libdc1394"
libfrei0r=""  ; [ "${FREI0R:-no}" != "no" ]       && libfrei0r="--enable-frei0r"
libgsm=""     ; [ "${GSM:-no}" != "no" ]          && libgsm="--enable-libgsm"
librtmp=""    ; [ "${RTMP:-no}" != "no" ]         && librtmp="--enable-librtmp"
dirac_fast="" ; [ "${SCHROEDINGER:-no}" != "no" ] && dirac_fast="--enable-libschroedinger"
libspeex=""   ; [ "${SPEEX:-no}" != "no" ]        && libspeex="--enable-libspeex"
libvpx=""     ; [ "${VPX:-no}" != "no" ]          && libvpx="--enable-libvpx"
libxvid=""    ; [ "${XVID:-no}" != "no" ]         && libxvid="--enable-libxvid"
libbluray=""  ; [ "${BLURAY:-no}" != "no" ]       && libbluray="--enable-libbluray"
libass=""     ; [ "${ASS:-no}" != "no" ]          && libass="--enable-libass"
libopenal=""  ; [ "${OPENAL:-no}" != "no" ]       && libopenal="--enable-openal"
libiec61883=""; [ "${IEC61883:-no}" != "no" ]     && libiec61883="--enable-libiec61883"
libilbc="";     [ "${ILBC:-no}" != "no" ]         && libilbc="--enable-libilbc"
libmodplug="";  [ "${MODPLUG:-no}" != "no" ]      && libmodplug="--enable-libmodplug"
libopus="";     [ "${OPUS:-no}" != "no" ]         && libopus="--enable-libopus"
libtwolame="";  [ "${TWOLAME:-no}" != "no" ]      && libtwolame="--enable-libtwolame"
ladspa="";      [ "${LADSPA:-no}" != "no" ]       && ladspa="--enable-ladspa"
#opencl="";      [ "${OPENCL:-no}" != "no" ]       && opencl="--enable-opencl"

opencore_amr="" ; [ "${OPENCORE:-no}" != "no" ] && \
  opencore_amr="--enable-libopencore-amrnb --enable-libopencore-amrwb"
fdk_aac=""      ; [ "${FDK_AAC:-no}" != "no" ]  && fdk_aac="--enable-libfdk-aac"
libfaac=""      ; [ "${FAAC:-no}" != "no" ]     && \
  { libfaac="--enable-libfaac" ; non_free="--enable-nonfree" ; }
ssl=""      ; [ "${OPENSSL:-no}" != "no" ]     && \
  { ssl="--enable-openssl" ; non_free="--enable-nonfree" ; }
openjpeg=""     ; [ "${JP2:-no}" != "no" ]      && \
  { openjpeg="--enable-libopenjpeg" ; \
    SLKCFLAGS="$SLKCFLAGS -I/${PREFIX}/include/openjpeg-1.5" ; }

mp3lame="--enable-libmp3lame" ; [ "${LAME:-yes}" != "yes" ] && mp3lame=""
libx264="--enable-libx264"    ; [ "${X264:-yes}" != "yes" ] && libx264=""

# opencv support is currently broken: http://code.opencv.org/issues/1925
#libopencv=""  ; [ "${OPENCV:-no}" != "no" ]       && libopencv="--enable-libopencv"

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.bz2
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;


sed -i '/^pkg_config_default="\${cross_prefix}\${pkg_config_default}"$/ s/.{cross_prefix}//' configure

CFLAGS="-O2" \
CXXFLAGS="-O2" \
LDFLAGS="-L/${PREFIX}/lib${LIBDIRSUFFIX}" \
./configure \
  --prefix=/${PREFIX} \
  --libdir=/${PREFIX}/lib${LIBDIRSUFFIX} \
  --shlibdir=/${PREFIX}/lib${LIBDIRSUFFIX} \
  --docdir=/${PREFIX}/doc/$PRGNAM-$VERSION/html \
  --mandir=/${PREFIX}/man \
  --disable-debug \
  --enable-shared \
  --disable-static \
  --enable-pthreads \
  --enable-libtheora \
  --enable-libvorbis \
  --enable-gpl \
  --enable-version3 \
  --enable-postproc \
  --enable-swscale \
  --enable-avfilter \
  --cross-prefix=${HOST_TRIPLET}- \
  --enable-cross-compile \
  --enable-gnutls \
  --arch="$(echo ${HOST_TRIPLET} | cut -f1 -d-)" \
  --target-os=mingw32 \
  $openjpeg \
  $libdc1394 \
  $fdk_aac \
  $mp3lame \
  $libfaac \
  $libxvid \
  $libx264 \
  $libspeex \
  $dirac_fast \
  $non_free \
  $libgsm \
  $libvpx \
  $librtmp \
  $opencore_amr \
  $libfrei0r \
  $libcelt \
  $libbluray \
  $libass \
  $libopenal \
  $libiec61883 \
  $libilbc \
  $libmodplug \
  $libopus \
  $libtwolame \
  $ladspa \
  $ssl

#  --enable-libcdio \
#  --enable-libssh \
make -j7
make install DESTDIR=$PKG
make install-man DESTDIR=$PKG

mv $PKG/${PREFIX}/lib${LIBDIRSUFFIX}/*.dll $PKG/${PREFIX}/bin

find $PKG | xargs file | egrep -e "executable|shared object" \
  | grep ${HOST_EXE_FORMAT} | cut -f 1 -d : \
  | xargs ${HOST_STRIP} --strip-unneeded 2> /dev/null || true

find $PKG/${PREFIX}/man -type f -exec gzip -9 {} \;

mkdir -p $PKG/${PREFIX}/doc/$PRGNAM-$VERSION/txt
cp -a Changelog COPYING* CREDITS INSTALL LICENSE MAINTAINERS README RELEASE \
  VERSION doc/RELEASE_NOTES $PKG/${PREFIX}/doc/$PRGNAM-$VERSION
cp -a doc/*.txt $PKG/${PREFIX}/doc/$PRGNAM-$VERSION/txt/
cat $CWD/$PRGNAM.SlackBuild > $PKG/${PREFIX}/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

cat ${CWD}/${PRGNAM}.yypkg.script | sed \
  -e "s/%{PKG}/${PRGNAM}/" \
  -e "s/%{HST}/${HOST_TRIPLET}/" \
  -e "s/%{TGT}//" \
  -e "s/%{VER}/${VERSION}/" \
  -e "s/%{BUILD}/${BUILD}/" \
  -e "s/%{DESCR}/${DESCR:-"No description"}/" \
  | yypkg --makepkg --output ${YYOUTPUT} --script - --directory "${PKG}/${PREFIX}"
