From 0b7a24f37eac5a3f47b5f3a8456f1cf086935a8d Mon Sep 17 00:00:00 2001
From: Adrien Nader <adrien@notk.org>
Date: Tue, 5 Mar 2013 20:39:44 +0100
Subject: [PATCH 31/34] configure: enable systhreads for *-*-mingw*.

---
 configure                     | 54 ++++++++++++++++++++++++-------------------
 otherlibs/systhreads/Makefile | 36 ++++++++++++++---------------
 2 files changed, 48 insertions(+), 42 deletions(-)

diff --git a/configure b/configure
index 0f19cbc..5493f22 100755
--- a/configure
+++ b/configure
@@ -1320,33 +1320,39 @@ if test "$pthread_wanted" = "yes"; then
                    pthread_caml_link="-cclib -pthread";;
     *-*-openbsd*)  pthread_link="-pthread"
                    pthread_caml_link="-cclib -pthread";;
+    *-*-mingw*)    pthread_link=""
+                   pthread_caml_link="";;
     *)             pthread_link="-lpthread"
                    pthread_caml_link="-cclib -lpthread";;
   esac
-  if ./hasgot -i pthread.h $pthread_link pthread_self; then
-    inf "POSIX threads library supported."
-    systhread_support=true
-    otherlibraries="$otherlibraries systhreads"
-    bytecccompopts="$bytecccompopts -D_REENTRANT"
-    nativecccompopts="$nativecccompopts -D_REENTRANT"
-    case "$target" in
-      *-*-freebsd*)
-          bytecccompopts="$bytecccompopts -D_THREAD_SAFE"
-          nativecccompopts="$nativecccompopts -D_THREAD_SAFE";;
-      *-*-openbsd*)
-          bytecccompopts="$bytecccompopts -pthread"
-          asppflags="$asppflags -pthread"
-          nativecccompopts="$nativecccompopts -pthread";;
-    esac
-    inf "Options for linking with POSIX threads: $pthread_link"
-    if sh ./hasgot $pthread_link sigwait; then
-      inf "sigwait() found"
-      echo "#define HAS_SIGWAIT" >> s.h
-    fi
-  else
-    inf "POSIX threads not found."
-    pthread_link=""
-  fi
+  case $target in
+    *-*-mingw*) otherlibraries="$otherlibraries systhreads" ;;
+    *)
+       if ./hasgot -i pthread.h $pthread_link pthread_self; then
+         inf "POSIX threads library supported."
+         systhread_support=true
+         otherlibraries="$otherlibraries systhreads"
+         bytecccompopts="$bytecccompopts -D_REENTRANT"
+         nativecccompopts="$nativecccompopts -D_REENTRANT"
+         case "$target" in
+           *-*-freebsd*)
+               bytecccompopts="$bytecccompopts -D_THREAD_SAFE"
+               nativecccompopts="$nativecccompopts -D_THREAD_SAFE";;
+           *-*-openbsd*)
+               bytecccompopts="$bytecccompopts -pthread"
+               asppflags="$asppflags -pthread"
+               nativecccompopts="$nativecccompopts -pthread";;
+         esac
+         inf "Options for linking with POSIX threads: $pthread_link"
+         if sh ./hasgot $pthread_link sigwait; then
+           inf "sigwait() found"
+           echo "#define HAS_SIGWAIT" >> s.h
+         fi
+       else
+         inf "POSIX threads not found."
+         pthread_link=""
+       fi
+  esac
 else
   pthread_link=""
 fi
diff --git a/otherlibs/systhreads/Makefile b/otherlibs/systhreads/Makefile
index a20cad2..de4bf1b 100644
--- a/otherlibs/systhreads/Makefile
+++ b/otherlibs/systhreads/Makefile
@@ -13,9 +13,9 @@
 
 include ../../config/Makefile
 
-CAMLC=$(CAMLC_TARGET_BIN) -I $(UNIXLIB)
-CAMLOPT=$(CAMLOPT_TARGET_BIN) -I $(UNIXLIB)
-MKLIB=../../boot/ocamlrun ../../tools/ocamlmklib
+CAMLC=$(CAMLC_TARGET_BIN) -I ../$(UNIXLIB)
+CAMLOPT=$(CAMLOPT_TARGET_BIN) -I ../$(UNIXLIB)
+MKLIB=$(CAMLMKLIB_BIN)
 COMPFLAGS=-w +33..39 -warn-error A -g
 
 BYTECODE_C_OBJS=st_stubs_b.o
@@ -23,11 +23,11 @@ NATIVECODE_C_OBJS=st_stubs_n.o
 
 THREAD_OBJS= thread.cmo mutex.cmo condition.cmo event.cmo threadUnix.cmo
 
-all: libthreads.a threads.cma
+all: libthreads.$(A) threads.cma
 
-allopt: libthreadsnat.a threads.cmxa
+allopt: libthreadsnat.$(A) threads.cmxa
 
-libthreads.a: $(BYTECODE_C_OBJS)
+libthreads.$(A): $(BYTECODE_C_OBJS)
 	$(MKLIB) -o threads $(BYTECODE_C_OBJS) -lpthread
 
 st_stubs_b.o: st_stubs.c st_posix.h
@@ -37,8 +37,8 @@ st_stubs_b.o: st_stubs.c st_posix.h
 
 # Dynamic linking with -lpthread is risky on many platforms, so
 # do not create a shared object for libthreadsnat.
-libthreadsnat.a: $(NATIVECODE_C_OBJS)
-	$(AR) rc libthreadsnat.a $(NATIVECODE_C_OBJS)
+libthreadsnat.$(A): $(NATIVECODE_C_OBJS)
+	$(AR) rc libthreadsnat.$(A) $(NATIVECODE_C_OBJS)
 
 st_stubs_n.o: st_stubs.c st_posix.h
 	$(NATIVECC) -O -I../../asmrun -I../../byterun $(NATIVECCCOMPOPTS) $(SHAREDCCCOMPOPTS) -DNATIVE_CODE -DTARGET_$(ARCH) -DSYS_$(SYSTEM) -c st_stubs.c
@@ -48,7 +48,7 @@ threads.cma: $(THREAD_OBJS)
 	$(MKLIB) -ocamlc '$(CAMLC)' -o threads $(THREAD_OBJS) \
 	  -cclib -lunix $(PTHREAD_LINK)
 
-# See remark above: force static linking of libthreadsnat.a
+# See remark above: force static linking of libthreadsnat.$(A)
 threads.cmxa: $(THREAD_OBJS:.cmo=.cmx)
 	$(CAMLOPT) -a -o threads.cmxa $(THREAD_OBJS:.cmo=.cmx) \
 	  -cclib -lthreadsnat $(PTHREAD_LINK)
@@ -65,12 +65,12 @@ partialclean:
 	rm -f *.cm*
 
 clean: partialclean
-	rm -f *.o *.a *.so
+	rm -f *.o *.$(A) *$(EXT_DLL)
 
 install:
-	if test -f dllthreads.so; then cp dllthreads.so $(STUBLIBDIR)/dllthreads.so; fi
-	cp libthreads.a $(LIBDIR)/libthreads.a
-	cd $(LIBDIR); $(RANLIB) libthreads.a
+	if test -f dllthreads$(EXT_DLL); then cp dllthreads$(EXT_DLL) $(STUBLIBDIR)/dllthreads$(EXT_DLL); fi
+	cp libthreads.$(A) $(LIBDIR)/libthreads.$(A)
+	cd $(LIBDIR); $(RANLIB) libthreads.$(A)
 	if test -d $(LIBDIR)/threads; then :; else mkdir $(LIBDIR)/threads; fi
 	cp $(THREAD_OBJS:.cmo=.cmi) threads.cma $(LIBDIR)/threads
 	rm -f $(LIBDIR)/threads/stdlib.cma
@@ -78,10 +78,10 @@ install:
 	cp threads.h $(LIBDIR)/caml/threads.h
 
 installopt:
-	cp libthreadsnat.a $(LIBDIR)/libthreadsnat.a
-	cd $(LIBDIR); $(RANLIB) libthreadsnat.a
-	cp $(THREAD_OBJS:.cmo=.cmx) threads.cmxa threads.a $(LIBDIR)/threads
-	cd $(LIBDIR)/threads; $(RANLIB) threads.a
+	cp libthreadsnat.$(A) $(LIBDIR)/libthreadsnat.$(A)
+	cd $(LIBDIR); $(RANLIB) libthreadsnat.$(A)
+	cp $(THREAD_OBJS:.cmo=.cmx) threads.cmxa threads.$(A) $(LIBDIR)/threads
+	cd $(LIBDIR)/threads; $(RANLIB) threads.$(A)
 
 .SUFFIXES: .ml .mli .cmo .cmi .cmx
 
@@ -96,6 +96,6 @@ installopt:
 
 depend: $(GENFILES)
 	-gcc -MM -I../../byterun *.c > .depend
-	../../boot/ocamlrun ../../tools/ocamldep *.mli *.ml >> .depend
+	$(CAMLRUN) ../../tools/ocamldep *.mli *.ml >> .depend
 
 include .depend
-- 
1.8.1.4

