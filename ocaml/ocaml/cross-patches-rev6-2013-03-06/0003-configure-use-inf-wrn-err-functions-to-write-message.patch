From 0f9eeb27f2bfb996556f44d039dc7d4dda6d6627 Mon Sep 17 00:00:00 2001
From: Adrien Nader <adrien@notk.org>
Date: Sat, 15 Dec 2012 13:19:02 +0100
Subject: [PATCH 03/34] configure: use inf/wrn/err functions to write messages
 for the user.

This makes writing messages more consistent.

Behaviours:
  inf(): writes its arguments to stderr
  wrn(): writes "WARNING:\n" to stderr and then its arguments to stderr
  err(): writes "ERROR:\n" to stderr, then its arguments to stderr, and
         calls "exit 2"
---
 configure | 422 +++++++++++++++++++++++++++++++-------------------------------
 1 file changed, 208 insertions(+), 214 deletions(-)

diff --git a/configure b/configure
index 0a80e9e..9c29d80 100755
--- a/configure
+++ b/configure
@@ -51,6 +51,23 @@ unset LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES LC_MONETARY LC_NUMERIC LC_TIME
 # Turn off some MacOS X debugging stuff, same reason
 unset RC_TRACE_ARCHIVES RC_TRACE_DYLIBS RC_TRACE_PREBINDING_DISABLED
 
+inf() {
+  printf "%b\n" "$*" 1>&3
+}
+
+wrn() {
+  printf "\nWARNING:\n" 1>&3
+  printf "%b\n\n" "$*" 1>&3
+}
+
+err() {
+  printf "\nERROR!\n" 1>&3
+  printf "%b\n\n" "$*" 1>&3
+  exit 2
+}
+
+exec 3>&1
+
 # Parse command-line arguments
 
 while : ; do
@@ -115,7 +132,7 @@ while : ; do
         debugruntime=runtimed;;
     -no-camlp4|--no-camlp4)
         withcamlp4="";;
-    *) echo "Unknown option \"$1\"." 1>&2; exit 2;;
+    *) err "Unknown option \"$1\".";;
   esac
   shift
 done
@@ -124,28 +141,25 @@ done
 
 case "$prefix" in
   /*) ;;
-   *) echo "The -prefix directory must be absolute." 1>&2; exit 2;;
+   *) err "The -prefix directory must be absolute.";;
 esac
 case "$bindir" in
   /*) ;;
   "") ;;
   '$(PREFIX)/'*) ;;
-   *) echo 'The -bindir directory must be absolute or relative to $(PREFIX).'>&2
-      exit 2;;
+   *) err 'The -bindir directory must be absolute or relative to $(PREFIX).';;
 esac
 case "$libdir" in
   /*) ;;
   "") ;;
   '$(PREFIX)/'*) ;;
-   *) echo 'The -libdir directory must be absolute or relative to $(PREFIX).'>&2
-      exit 2;;
+   *) err 'The -libdir directory must be absolute or relative to $(PREFIX).';;
 esac
 case "$mandir" in
   /*) ;;
   "") ;;
   '$(PREFIX)/'*) ;;
-   *) echo 'The -mandir directory must be absolute or relative to $(PREFIX).'>&2
-      exit 2;;
+   *) err 'The -mandir directory must be absolute or relative to $(PREFIX).';;
 esac
 
 # Generate the files
@@ -183,22 +197,19 @@ echo "MANEXT=$manext" >> Makefile
 
 if test "$host_type" = "unknown"; then
   if host_type=`../gnu/config.guess`; then :; else
-    echo "Cannot guess host type"
-    echo "You must specify one with the -host option"
-    exit 2
+    err "Cannot guess host type. You must specify one with the -host option."
   fi
 fi
 if host=`../gnu/config.sub $host_type`; then :; else
-  echo "Please specify the correct host type with the -host option"
-  exit 2
+  err "Please specify the correct host type with the -host option"
 fi
-echo "Configuring for a $host ..."
+inf "Configuring for a $host ..."
 
 # Do we have gcc?
 
 if test -z "$ccoption"; then
   if sh ./searchpath gcc; then
-    echo "gcc found"
+    inf "gcc found"
     cc=gcc
   else
     cc=cc
@@ -322,7 +333,7 @@ case "$bytecc,$host" in
       flexlink="flexlink -chain cygwin -merge-manifest -stack 16777216"
       flexdir=`$flexlink -where | dos2unix`
       if test -z "$flexdir"; then
-        echo "flexlink not found: native shared libraries won't be available"
+        wrn "flexlink not found: native shared libraries won't be available."
         withsharedlibs=no
       else
         iflexdir="-I\"$flexdir\""
@@ -352,38 +363,32 @@ export cc cclibs verbose
 
 sh ./runtest ansi.c
 case $? in
-  0) echo "The C compiler is ANSI-compliant.";;
-  1) echo "The C compiler $cc is not ANSI-compliant."
-     echo "You need an ANSI C compiler to build OCaml."
-     exit 2;;
-  *) echo "Unable to compile the test program."
-     echo "Make sure the C compiler $cc is properly installed."
-     exit 2;;
+  0) inf "The C compiler is ANSI-compliant." ;;
+  1) err "The C compiler $cc is not ANSI-compliant.\nYou need an ANSI C compiler to build OCaml.";;
+  *) err "Unable to compile the test program.\n" \
+         "Make sure the C compiler $cc is properly installed.";;
 esac
 
 # Check the sizes of data types
 
-echo "Checking the sizes of integers and pointers..."
+inf "Checking the sizes of integers and pointers..."
 set `sh ./runtest sizes.c`
 case "$2,$3" in
-  4,4) echo "OK, this is a regular 32 bit architecture."
+  4,4) inf "OK, this is a regular 32 bit architecture."
        echo "#undef ARCH_SIXTYFOUR" >> m.h
        arch64=false;;
-  *,8) echo "Wow! A 64 bit architecture!"
+  *,8) inf "Wow! A 64 bit architecture!"
        echo "#define ARCH_SIXTYFOUR" >> m.h
        arch64=true;;
-  *,*) echo "This architecture seems to be neither 32 bits nor 64 bits."
-       echo "OCaml won't run on this architecture."
-       exit 2;;
-    *) echo "Unable to compile the test program."
-       echo "Make sure the C compiler $cc is properly installed."
-       exit 2;;
+  *,*) err "This architecture seems to be neither 32 bits nor 64 bits.\n" \
+           "OCaml won't run on this architecture.";;
+    *) err "Unable to compile the test program.\n" \
+           "Make sure the C compiler $cc is properly installed.";;
 esac
 if test $1 != 4 && test $2 != 4 && test $4 != 4; then
-  echo "Sorry, we can't find a 32-bit integer type"
-  echo "(sizeof(short) = $4, sizeof(int) = $1, sizeof(long) = $2)"
-  echo "OCaml won't run on this architecture."
-  exit 2
+  err "Sorry, we can't find a 32-bit integer type\n" \
+      "(sizeof(short) = $4, sizeof(int) = $1, sizeof(long) = $2)\n" \
+      "OCaml won't run on this architecture."
 fi
 
 echo "#define SIZEOF_INT $1" >> m.h
@@ -399,22 +404,22 @@ if test $2 = 8; then
 else
   sh ./runtest longlong.c
   case $? in
-  0) echo "64-bit \"long long\" integer type found (printf with \"%ll\")."
+  0) inf "64-bit \"long long\" integer type found (printf with \"%ll\")."
      echo "#define ARCH_INT64_TYPE long long" >> m.h
      echo "#define ARCH_UINT64_TYPE unsigned long long" >> m.h
      echo '#define ARCH_INT64_PRINTF_FORMAT "ll"' >> m.h
      int64_native=true;;
-  1) echo "64-bit \"long long\" integer type found (printf with \"%q\")."
+  1) inf "64-bit \"long long\" integer type found (printf with \"%q\")."
      echo "#define ARCH_INT64_TYPE long long" >> m.h
      echo "#define ARCH_UINT64_TYPE unsigned long long" >> m.h
      echo '#define ARCH_INT64_PRINTF_FORMAT "q"' >> m.h
      int64_native=true;;
-  2) echo "64-bit \"long long\" integer type found (but no printf)."
+  2) inf "64-bit \"long long\" integer type found (but no printf)."
      echo "#define ARCH_INT64_TYPE long long" >> m.h
      echo "#define ARCH_UINT64_TYPE unsigned long long" >> m.h
      echo '#undef ARCH_INT64_PRINTF_FORMAT' >> m.h
      int64_native=true;;
-  *) echo "No suitable 64-bit integer type found, will use software emulation."
+  *) wrn "No suitable 64-bit integer type found, will use software emulation."
      echo "#undef ARCH_INT64_TYPE" >> m.h
      echo "#undef ARCH_UINT64_TYPE" >> m.h
      echo '#undef ARCH_INT64_PRINTF_FORMAT' >> m.h
@@ -423,25 +428,19 @@ else
 fi
 
 if test $3 = 8 && test $int64_native = false; then
-  echo "This architecture has 64-bit pointers but no 64-bit integer type."
-  echo "OCaml won't run on this architecture."
-  exit 2
+  err "This architecture has 64-bit pointers but no 64-bit integer type.\nOCaml won't run on this architecture."
 fi
 
 # Determine endianness
 
 sh ./runtest endian.c
 case $? in
-  0) echo "This is a big-endian architecture."
+  0) inf "This is a big-endian architecture."
      echo "#define ARCH_BIG_ENDIAN" >> m.h;;
-  1) echo "This is a little-endian architecture."
+  1) inf "This is a little-endian architecture."
      echo "#undef ARCH_BIG_ENDIAN" >> m.h;;
-  2) echo "This architecture seems to be neither big endian nor little endian."
-     echo "OCaml won't run on this architecture."
-     exit 2;;
-  *) echo "Something went wrong during endianness determination."
-     echo "You'll have to figure out endianness yourself"
-     echo "(option ARCH_BIG_ENDIAN in m.h).";;
+  2) err "This architecture seems to be neither big endian nor little endian. OCaml won't run on this architecture.";;
+  *) wrn "Something went wrong during endianness determination. You will have to figure out endianness yourself (option ARCH_BIG_ENDIAN in m.h).";;
 esac
 
 # Determine alignment constraints
@@ -457,23 +456,22 @@ case "$host" in
     # if we're in 64-bit mode (sizeof(long) == 8),
     # we must not doubleword-align floats...
     if test $2 = 8; then
-      echo "Doubles can be word-aligned."
+      inf "Doubles can be word-aligned."
       echo "#undef ARCH_ALIGN_DOUBLE" >> m.h
     else
-      echo "Doubles must be doubleword-aligned."
+      inf "Doubles must be doubleword-aligned."
       echo "#define ARCH_ALIGN_DOUBLE" >> m.h
     fi;;
   *)
     sh ./runtest dblalign.c
     case $? in
-      0) echo "Doubles can be word-aligned."
+      0) inf "Doubles can be word-aligned."
          echo "#undef ARCH_ALIGN_DOUBLE" >> m.h;;
-      1) echo "Doubles must be doubleword-aligned."
+      1) inf "Doubles must be doubleword-aligned."
          echo "#define ARCH_ALIGN_DOUBLE" >> m.h;;
-      *) echo "Something went wrong during alignment determination for doubles."
-         echo "I'm going to assume this architecture has alignment constraints over doubles."
-         echo "That's a safe bet: OCaml will work even if"
-         echo "this architecture has actually no alignment constraints."
+      *) wrn "Something went wrong during alignment determination for doubles.\n" \
+             "I'm going to assume this architecture has alignment constraints over doubles.\n" \
+             "That's a safe bet: OCaml will work even if this architecture has actually no alignment constraints."
          echo "#define ARCH_ALIGN_DOUBLE" >> m.h;;
     esac;;
 esac
@@ -483,24 +481,21 @@ if $int64_native; then
     # PR#5088: autodetection is unreliable on ARM.  PR#5280: also on MIPS.
     sparc*-*-*|hppa*-*-*|arm*-*-*|mips*-*-*)
       if test $2 = 8; then
-        echo "64-bit integers can be word-aligned."
+        inf "64-bit integers can be word-aligned."
         echo "#undef ARCH_ALIGN_INT64" >> m.h
       else
-        echo "64-bit integers must be doubleword-aligned."
+        inf "64-bit integers must be doubleword-aligned."
         echo "#define ARCH_ALIGN_INT64" >> m.h
       fi;;
     *)
       sh ./runtest int64align.c
       case $? in
-        0) echo "64-bit integers can be word-aligned."
+        0) inf "64-bit integers can be word-aligned."
            echo "#undef ARCH_ALIGN_INT64" >> m.h;;
-        1) echo "64-bit integers must be doubleword-aligned."
-           echo "#define ARCH_ALIGN_INT64" >> m.h;;
-        *) echo "Something went wrong during alignment determination for 64-bit integers."
-           echo "I'm going to assume this architecture has alignment constraints."
-           echo "That's a safe bet: OCaml will work even if"
-           echo "this architecture has actually no alignment constraints."
+        1) inf "64-bit integers must be doubleword-aligned."
            echo "#define ARCH_ALIGN_INT64" >> m.h;;
+        *) wrn "Something went wrong during alignment determination for 64-bit integers.\nI'm going to assume this architecture has alignment constraints over doubles.\nThat's a safe bet: OCaml will work even if this architecture has actually no alignment constraints."
+               "#define ARCH_ALIGN_INT64" >> m.h;;
       esac
   esac
 else
@@ -511,11 +506,11 @@ fi
 
 sh ./runtest divmod.c
 case $? in
-  0) echo "Native division and modulus have round-towards-zero semantics, will use them."
+  0) inf "Native division and modulus have round-towards-zero semantics, will use them."
      echo "#undef NONSTANDARD_DIV_MOD" >> m.h;;
-  1) echo "Native division and modulus do not have round-towards-zero semantics, will use software emulation."
+  1) inf "Native division and modulus do not have round-towards-zero semantics, will use software emulation."
      echo "#define NONSTANDARD_DIV_MOD" >> m.h;;
-  *) echo "Something went wrong while checking native division and modulus, please report it."
+  *) wrn "Something went wrong while checking native division and modulus, please report it."
      echo "#define NONSTANDARD_DIV_MOD" >> m.h;;
 esac
 
@@ -796,11 +791,11 @@ esac
 # Where is ranlib?
 
 if sh ./searchpath ranlib; then
-  echo "ranlib found"
+  inf "ranlib found"
   echo "RANLIB=ranlib" >> Makefile
   echo "RANLIBCMD=ranlib" >> Makefile
 else
-  echo "ranlib not used"
+  inf "ranlib not used"
   echo "RANLIB=ar rs" >> Makefile
   echo "RANLIBCMD=" >> Makefile
 fi
@@ -811,21 +806,21 @@ echo "ARCMD=ar" >> Makefile
 # Do #! scripts work?
 
 if (SHELL=/bin/sh; export SHELL; (./sharpbang || ./sharpbang2) >/dev/null); then
-  echo "#! appears to work in shell scripts"
+  inf "#! appears to work in shell scripts."
   case "$host" in
     *-*-sunos*|*-*-unicos*)
-      echo "We won't use it, though, because under SunOS and Unicos it breaks"
-      echo "on pathnames longer than 30 characters"
+      wrn "We won't use it, though, because under SunOS and Unicos it breaks" \
+          "on pathnames longer than 30 characters"
       echo "SHARPBANGSCRIPTS=false" >> Makefile;;
     *-*-cygwin*)
-      echo "We won't use it, though, because of conflicts with .exe extension"
-      echo "  under Cygwin"
+      wrn "We won't use it, though, because of conflicts with .exe extension" \
+          "under Cygwin"
       echo "SHARPBANGSCRIPTS=false" >> Makefile;;
     *)
       echo "SHARPBANGSCRIPTS=true" >> Makefile;;
   esac
 else
-  echo "No support for #! in shell scripts"
+  inf "No support for #! in shell scripts"
   echo "SHARPBANGSCRIPTS=false" >> Makefile
 fi
 
@@ -842,17 +837,17 @@ nativecccompopts="$nativecccompopts -D_FILE_OFFSET_BITS=64"
 # Check the semantics of signal handlers
 
 if sh ./hasgot sigaction sigprocmask; then
-  echo "POSIX signal handling found."
+  inf "POSIX signal handling found."
   echo "#define POSIX_SIGNALS" >> s.h
 else
   if sh ./runtest signals.c; then
-    echo "Signals have the BSD semantics."
+    inf "Signals have the BSD semantics."
     echo "#define BSD_SIGNALS" >> s.h
   else
-    echo "Signals have the System V semantics."
+    inf "Signals have the System V semantics."
   fi
   if sh ./hasgot sigsetmask; then
-    echo "sigsetmask() found"
+    inf "sigsetmask() found"
     echo "#define HAS_SIGSETMASK" >> s.h
   fi
 fi
@@ -860,19 +855,19 @@ fi
 # For the Pervasives module
 
 if sh ./hasgot2 -i math.h $mathlib expm1 log1p hypot copysign; then
-  echo "expm1(), log1p(), hypot(), copysign() found."
+  inf "expm1(), log1p(), hypot(), copysign() found."
   echo "#define HAS_C99_FLOAT_OPS" >> s.h
 fi
 
 # For the Sys module
 
 if sh ./hasgot getrusage; then
-  echo "getrusage() found."
+  inf "getrusage() found."
   echo "#define HAS_GETRUSAGE" >> s.h
 fi
 
 if sh ./hasgot times; then
-  echo "times() found."
+  inf "times() found."
   echo "#define HAS_TIMES" >> s.h
 fi
 
@@ -881,7 +876,7 @@ fi
 if test "$withcurses" = "yes"; then
   for libs in "" "-lcurses" "-ltermcap" "-lcurses -ltermcap" "-lncurses"; do
     if sh ./hasgot $libs tgetent tgetstr tgetnum tputs; then
-      echo "termcap functions found (with libraries '$libs')"
+      inf "termcap functions found (with libraries '$libs')"
       echo "#define HAS_TERMCAP" >> s.h
       curseslibs="${libs}"
       break
@@ -897,106 +892,106 @@ otherlibraries="unix str num dynlink bigarray"
 
 has_sockets=no
 if sh ./hasgot socket socketpair bind listen accept connect; then
-  echo "You have BSD sockets."
+  inf "You have BSD sockets."
   echo "#define HAS_SOCKETS" >> s.h
   has_sockets=yes
 elif sh ./hasgot -lnsl -lsocket socket socketpair bind listen accept connect; then
-  echo "You have BSD sockets (with libraries '-lnsl -lsocket')"
+  inf "You have BSD sockets (with libraries '-lnsl -lsocket')"
   cclibs="$cclibs -lnsl -lsocket"
   echo "#define HAS_SOCKETS" >> s.h
   has_sockets=yes
 fi
 
 if sh ./hasgot -i sys/socket.h -t socklen_t; then
-  echo "socklen_t is defined in <sys/socket.h>"
+  inf "socklen_t is defined in <sys/socket.h>"
   echo "#define HAS_SOCKLEN_T" >> s.h
 fi
 
 if sh ./hasgot inet_aton; then
-  echo "inet_aton() found."
+  inf "inet_aton() found."
   echo "#define HAS_INET_ATON" >> s.h
 fi
 
 if sh ./hasgot -i sys/types.h -i sys/socket.h -i netinet/in.h \
                -t 'struct sockaddr_in6' \
 && sh ./hasgot getaddrinfo getnameinfo inet_pton inet_ntop; then
-  echo "IPv6 is supported."
+  inf "IPv6 is supported."
   echo "#define HAS_IPV6" >> s.h
 fi
 
 if sh ./hasgot -i unistd.h; then
-  echo "unistd.h found."
+  inf "unistd.h found."
   echo "#define HAS_UNISTD" >> s.h
 fi
 
 if sh ./hasgot -i sys/types.h -t off_t; then
-  echo "off_t is defined in <sys/types.h>"
+  inf "off_t is defined in <sys/types.h>"
   echo "#define HAS_OFF_T" >> s.h
 fi
 
 if sh ./hasgot -i sys/types.h -i dirent.h; then
-  echo "dirent.h found."
+  inf "dirent.h found."
   echo "#define HAS_DIRENT" >> s.h
 fi
 
 if sh ./hasgot rewinddir; then
-  echo "rewinddir() found."
+  inf "rewinddir() found."
   echo "#define HAS_REWINDDIR" >> s.h
 fi
 
 if sh ./hasgot lockf; then
-  echo "lockf() found."
+  inf "lockf() found."
   echo "#define HAS_LOCKF" >> s.h
 fi
 
 if sh ./hasgot mkfifo; then
-  echo "mkfifo() found."
+  inf "mkfifo() found."
   echo "#define HAS_MKFIFO" >> s.h
 fi
 
 if sh ./hasgot getcwd; then
-  echo "getcwd() found."
+  inf "getcwd() found."
   echo "#define HAS_GETCWD" >> s.h
 fi
 
 if sh ./hasgot getwd; then
-  echo "getwd() found."
+  inf "getwd() found."
   echo "#define HAS_GETWD" >> s.h
 fi
 
 if sh ./hasgot getpriority setpriority; then
-  echo "getpriority() found."
+  inf "getpriority() found."
   echo "#define HAS_GETPRIORITY" >> s.h
 fi
 
 if sh ./hasgot -i sys/types.h -i utime.h && sh ./hasgot utime; then
-  echo "utime() found."
+  inf "utime() found."
   echo "#define HAS_UTIME" >> s.h
 fi
 
 if sh ./hasgot utimes; then
-  echo "utimes() found."
+  inf "utimes() found."
   echo "#define HAS_UTIMES" >> s.h
 fi
 
 if sh ./hasgot dup2; then
-  echo "dup2() found."
+  inf "dup2() found."
   echo "#define HAS_DUP2" >> s.h
 fi
 
 if sh ./hasgot fchmod fchown; then
-  echo "fchmod() found."
+  inf "fchmod() found."
   echo "#define HAS_FCHMOD" >> s.h
 fi
 
 if sh ./hasgot truncate ftruncate; then
-  echo "truncate() found."
+  inf "truncate() found."
   echo "#define HAS_TRUNCATE" >> s.h
 fi
 
 select_include=''
 if sh ./hasgot -i sys/types.h -i sys/select.h; then
-  echo "sys/select.h found."
+  inf "sys/select.h found."
   echo "#define HAS_SYS_SELECT_H" >> s.h
   select_include='-i sys/select.h'
 fi
@@ -1004,114 +999,114 @@ fi
 has_select=no
 if sh ./hasgot select && \
    sh ./hasgot -i sys/types.h $select_include -t fd_set ; then
-  echo "select() found."
+  inf "select() found."
   echo "#define HAS_SELECT" >> s.h
   has_select=yes
 fi
 
 if sh ./hasgot symlink readlink lstat;  then
-  echo "symlink() found."
+  inf "symlink() found."
   echo "#define HAS_SYMLINK" >> s.h
 fi
 
 has_wait=no
 if sh ./hasgot waitpid;  then
-  echo "waitpid() found."
+  inf "waitpid() found."
   echo "#define HAS_WAITPID" >> s.h
   has_wait=yes
 fi
 
 if sh ./hasgot wait4;  then
-  echo "wait4() found."
+  inf "wait4() found."
   echo "#define HAS_WAIT4" >> s.h
   has_wait=yes
 fi
 
 if sh ./hasgot -i limits.h && sh ./runtest getgroups.c; then
-  echo "getgroups() found."
+  inf "getgroups() found."
   echo "#define HAS_GETGROUPS" >> s.h
 fi
 
 if sh ./hasgot -i limits.h -i grp.h && sh ./runtest setgroups.c; then
-  echo "setgroups() found."
+  inf "setgroups() found."
   echo "#define HAS_SETGROUPS" >> s.h
 fi
 
 if sh ./hasgot -i limits.h -i grp.h && sh ./runtest initgroups.c; then
-  echo "initgroups() found."
+  inf "initgroups() found."
   echo "#define HAS_INITGROUPS" >> s.h
 fi
 
 if sh ./hasgot -i termios.h &&
    sh ./hasgot tcgetattr tcsetattr tcsendbreak tcflush tcflow; then
-  echo "POSIX termios found."
+  inf "POSIX termios found."
   echo "#define HAS_TERMIOS" >> s.h
 fi
 
 if sh ./runtest async_io.c; then
-  echo "Asynchronous I/O are supported."
+  inf "Asynchronous I/O are supported."
   echo "#define HAS_ASYNC_IO" >> s.h
 fi
 
 has_setitimer=no
 if sh ./hasgot setitimer; then
-  echo "setitimer() found."
+  inf "setitimer() found."
   echo "#define HAS_SETITIMER" >> s.h
   has_setitimer="yes"
 fi
 
 if sh ./hasgot gethostname; then
-  echo "gethostname() found."
+  inf "gethostname() found."
   echo "#define HAS_GETHOSTNAME" >> s.h
 fi
 
 if sh ./hasgot -i sys/utsname.h && sh ./hasgot uname; then
-  echo "uname() found."
+  inf "uname() found."
   echo "#define HAS_UNAME" >> s.h
 fi
 
 has_gettimeofday=no
 if sh ./hasgot gettimeofday; then
-  echo "gettimeofday() found."
+  inf "gettimeofday() found."
   echo "#define HAS_GETTIMEOFDAY" >> s.h
   has_gettimeofday="yes"
 fi
 
 if sh ./hasgot mktime; then
-  echo "mktime() found."
+  inf "mktime() found."
   echo "#define HAS_MKTIME" >> s.h
 fi
 
 case "$host" in
   *-*-cygwin*) ;;  # setsid emulation under Cygwin breaks the debugger
   *) if sh ./hasgot setsid; then
-       echo "setsid() found."
+       inf "setsid() found."
        echo "#define HAS_SETSID" >> s.h
      fi;;
 esac
 
 if sh ./hasgot putenv; then
-  echo "putenv() found."
+  inf "putenv() found."
   echo "#define HAS_PUTENV" >> s.h
 fi
 
 if sh ./hasgot -i locale.h && sh ./hasgot setlocale; then
-  echo "setlocale() and <locale.h> found."
+  inf "setlocale() and <locale.h> found."
   echo "#define HAS_LOCALE" >> s.h
 fi
 
 
 if sh ./hasgot $dllib dlopen; then
-  echo "dlopen() found."
+  inf "dlopen() found."
 elif sh ./hasgot $dllib -ldl dlopen; then
-  echo "dlopen() found in -ldl."
+  inf "dlopen() found in -ldl."
   dllib="$dllib -ldl"
 else
   shared_libraries_supported=false
 fi
 
 if $shared_libraries_supported; then
-  echo "Dynamic loading of shared libraries is supported."
+  inf "Dynamic loading of shared libraries is supported."
   echo "#define SUPPORT_DYNAMIC_LINKING" >> s.h
   if $dl_needs_underscore; then
     echo '#define DL_NEEDS_UNDERSCORE' >>s.h
@@ -1119,12 +1114,12 @@ if $shared_libraries_supported; then
 fi
 
 if sh ./hasgot -i sys/types.h -i sys/mman.h && sh ./hasgot mmap munmap; then
-  echo "mmap() found."
+  inf "mmap() found."
   echo "#define HAS_MMAP" >> s.h
 fi
 
 if sh ./hasgot pwrite; then
-  echo "pwrite() found"
+  inf "pwrite() found"
   echo "#define HAS_PWRITE" >> s.h
 fi
 
@@ -1133,7 +1128,7 @@ for i in 5 6; do
   if sh ./trycompile -DNUM_ARGS=${i} gethostbyname.c; then nargs=$i; break; fi
 done
 if test $nargs != "none"; then
-  echo "gethostbyname_r() found (with ${nargs} arguments)."
+  inf "gethostbyname_r() found (with ${nargs} arguments)."
   echo "#define HAS_GETHOSTBYNAME_R $nargs" >> s.h
 fi
 
@@ -1142,17 +1137,17 @@ for i in 7 8; do
   if sh ./trycompile -DNUM_ARGS=${i} gethostbyaddr.c; then nargs=$i; break; fi
 done
 if test $nargs != "none"; then
-  echo "gethostbyaddr_r() found (with ${nargs} arguments)."
+  inf "gethostbyaddr_r() found (with ${nargs} arguments)."
   echo "#define HAS_GETHOSTBYADDR_R $nargs" >> s.h
 fi
 
 # Determine if the debugger is supported
 
 if test "$has_sockets" = "yes"; then
-  echo "Replay debugger supported."
+  inf "Replay debugger supported."
   debugger="ocamldebugger"
 else
-  echo "No replay debugger (missing system calls)"
+  inf "No replay debugger (missing system calls)"
   debugger=""
 fi
 
@@ -1161,10 +1156,10 @@ fi
 
 case "$arch,$system" in
   i386,linux_elf|amd64,linux|power,rhapsody|amd64,macosx|i386,macosx)
-    echo "System stack overflow can be detected."
+    inf "System stack overflow can be detected."
     echo "#define HAS_STACK_OVERFLOW_DETECTION" >> s.h;;
   *)
-    echo "Cannot detect system stack overflow.";;
+    inf "Cannot detect system stack overflow.";;
 esac
 
 # Determine the target architecture for the "num" library
@@ -1199,7 +1194,7 @@ if test "$pthread_wanted" = "yes"; then
                    pthread_caml_link="-cclib -lpthread";;
   esac
   if ./hasgot -i pthread.h $pthread_link pthread_self; then
-    echo "POSIX threads library supported."
+    inf "POSIX threads library supported."
     systhread_support=true
     otherlibraries="$otherlibraries systhreads"
     bytecccompopts="$bytecccompopts -D_REENTRANT"
@@ -1213,13 +1208,13 @@ if test "$pthread_wanted" = "yes"; then
           asppflags="$asppflags -pthread"
           nativecccompopts="$nativecccompopts -pthread";;
     esac
-    echo "Options for linking with POSIX threads: $pthread_link"
+    inf "Options for linking with POSIX threads: $pthread_link"
     if sh ./hasgot $pthread_link sigwait; then
-      echo "sigwait() found"
+      inf "sigwait() found"
       echo "#define HAS_SIGWAIT" >> s.h
     fi
   else
-    echo "POSIX threads not found."
+    inf "POSIX threads not found."
     pthread_link=""
   fi
 else
@@ -1233,10 +1228,10 @@ if test "$has_select" = "yes" \
 && test "$has_setitimer" = "yes" \
 && test "$has_gettimeofday" = "yes" \
 && test "$has_wait" = "yes"; then
-  echo "Bytecode threads library supported."
+  inf "Bytecode threads library supported."
   otherlibraries="$otherlibraries threads"
 else
-  echo "Bytecode threads library not supported (missing system calls)"
+  inf "Bytecode threads library not supported (missing system calls)"
 fi
 
 # Determine the location of X include files and libraries
@@ -1389,9 +1384,9 @@ if test "x11_include" != "not found"; then
     x11_include=""
   fi
   if ./hasgot $x11_include $x11_link -i X11/Xlib.h XrmInitialize; then
-    echo "X11 works"
+    inf "X11 works"
   else
-    echo "Cannot compile X11 program"
+    inf "Cannot compile X11 program"
     x11_include="not found"
   fi
 fi
@@ -1399,12 +1394,12 @@ fi
 has_graph=false
 if test "$x11_include" = "not found" || test "$x11_link" = "not found"
 then
-  echo "X11 not found, the \"graph\" library will not be supported."
+  inf "X11 not found, the \"graph\" library will not be supported."
   x11_include="not found"
   x11_link="not found"
 else
-  echo "Options for compiling for X11: $x11_include"
-  echo "Options for linking with X11: $x11_link"
+  inf "Options for compiling for X11: $x11_include"
+  inf "Options for linking with X11: $x11_link"
   if test "$graph_wanted" = yes
   then
     has_graph=true
@@ -1416,14 +1411,14 @@ echo "X11_LINK=$x11_link" >> Makefile
 
 # Look for tcl/tk
 
-echo "Configuring LablTk..."
+inf "Configuring LablTk..."
 
 if test $tk_wanted = no; then
   has_tk=false
 elif test $tk_x11 = no; then
   has_tk=true
 elif test "$x11_include" = "not found" || test "$x11_link" = "not found"; then
-  echo "X11 not found or disabled."
+  inf "X11 not found or disabled."
   has_tk=false
 else
   tk_x11_include="$x11_include"
@@ -1454,7 +1449,7 @@ if test $has_tk = true; then
     tcl_version=`sh ./runtest $tk_defs $tk_x11_include tclversion.c`
   fi; done
   if test -n "$tcl_version" && test "x$tcl_version" != "xnone"; then
-    echo "tcl.h and tk.h version $tcl_version found with \"$tk_defs\"."
+    inf "tcl.h and tk.h version $tcl_version found with \"$tk_defs\"."
     case $tcl_version in
     8.6) tclmaj=8 tclmin=6 tkmaj=8 tkmin=6 ;;
     8.5) tclmaj=8 tclmin=5 tkmaj=8 tkmin=5 ;;
@@ -1465,10 +1460,10 @@ if test $has_tk = true; then
     8.0) tclmaj=8 tclmin=0 tkmaj=8 tkmin=0 ;;
     7.6) tclmaj=7 tclmin=6 tkmaj=4 tkmin=2 ;;
     7.5) tclmaj=7 tclmin=5 tkmaj=4 tkmin=1 ;;
-    *) echo "This version is not known."; has_tk=false ;;
+    *) wrn "This version is not known." ; has_tk=false ;;
     esac
   else
-    echo "tcl.h and/or tk.h not found."
+    inf "tcl.h and/or tk.h not found."
     has_tk=false
   fi
 fi
@@ -1505,30 +1500,30 @@ if test $has_tk = true; then
       *) tk_libs="-L/usr/pkg/lib $tk_libs $tk_x11_libs -ltk$tkmaj$tkmin -ltcl$tclmaj$tclmin -lpthread $tkauxlibs";;
     esac
   else
-    echo "Tcl library not found."
+    inf "Tcl library not found."
     has_tk=false
   fi
 fi
 
 if test $has_tk = true; then
   if sh ./hasgot $tk_libs $tk_x11_libs $tkauxlibs Tk_SetGrid; then
-    echo "Tcl/Tk libraries found."
+    inf "Tcl/Tk libraries found."
   elif sh ./hasgot -L/sw/lib $tk_libs $tk_x11_libs $tkauxlibs Tk_SetGrid; then
     case "$host" in
       *-*-*bsd*) tk_libs="-R/sw/lib -L/sw/lib $tk_libs";;
       *) tk_libs="-L/sw/lib $tk_libs";;
     esac
-    echo "Tcl/Tk libraries found."
+    inf "Tcl/Tk libraries found."
   elif sh ./hasgot -L/usr/pkg/lib $tk_libs $tk_x11_libs $tkauxlibs \
                    Tk_SetGrid; then
     case "$host" in
       *-*-*bsd*) tk_libs="-R/usr/pkg/lib -L/usr/pkg/lib $tk_libs";;
       *) tk_libs="-L/usr/pkg/lib $tk_libs";;
     esac
-    echo "Tcl/Tk libraries found."
+    inf "Tcl/Tk libraries found."
   else
-    echo "Tcl library found."
-    echo "Tk library not found."
+    inf "Tcl library found."
+    wrn "Tk library not found."
     has_tk=false
   fi
 fi
@@ -1543,7 +1538,7 @@ if test $has_tk = true; then
   fi
   otherlibraries="$otherlibraries labltk"
 else
-  echo "Configuration failed, LablTk will not be built."
+  wrn "Configuration failed, LablTk will not be built."
   echo "TK_DEFS=" >> Makefile
   echo "TK_LINK=" >> Makefile
 fi
@@ -1552,11 +1547,11 @@ fi
 
 if ./hasgot -i bfd.h && \
    ./hasgot -lbfd -ldl -liberty -lz bfd_openr; then
-  echo "BFD library found."
+  inf "BFD library found."
   echo "#define HAS_LIBBFD" >> s.h
   echo "LIBBFD_LINK=-lbfd -ldl -liberty -lz" >> Makefile
 else
-  echo "BFD library not found, 'objinfo' will be unable to display info on .cmxs files"
+  inf "BFD library not found, 'objinfo' will be unable to display info on .cmxs files"
   echo "LIBBFD_LINK=" >> Makefile
 fi
 
@@ -1569,9 +1564,9 @@ export as aspp
 if sh ./tryassemble cfi.S; then
   echo "#define ASM_CFI_SUPPORTED" >> m.h
   asm_cfi_supported=true
-  echo "Assembler supports CFI"
+  inf "Assembler supports CFI"
 else
-  echo "Assembler does not support CFI"
+  inf "Assembler does not support CFI"
 fi
 
 # Final twiddling of compiler options to work around known bugs
@@ -1654,94 +1649,93 @@ mv m.h s.h Makefile ..
 
 # Print a summary
 
-echo
-echo "** Configuration summary **"
-echo
-echo "Directories where OCaml will be installed:"
-echo "        binaries.................. $bindir"
-echo "        standard library.......... $libdir"
-echo "        manual pages.............. $mandir (with extension .$manext)"
-
-echo "Configuration for the bytecode compiler:"
-echo "        C compiler used........... $bytecc"
-echo "        options for compiling..... $bytecccompopts"
-echo "        options for linking....... $bytecclinkopts $cclibs $dllib $curseslibs $pthread_link"
+inf
+inf "** Configuration summary **"
+inf
+inf "Directories where OCaml will be installed:"
+inf "        binaries.................. $bindir"
+inf "        standard library.......... $libdir"
+inf "        manual pages.............. $mandir (with extension .$manext)"
+
+inf "Configuration for the bytecode compiler:"
+inf "        C compiler used........... $bytecc"
+inf "        options for compiling..... $bytecccompopts"
+inf "        options for linking....... $bytecclinkopts $cclibs $dllib $curseslibs $pthread_link"
 if $shared_libraries_supported; then
-echo "        shared libraries are supported"
-echo "        options for compiling..... $sharedcccompopts $bytecccompopts"
-echo "        command for building...... $mksharedlib -o lib.so $mksharedlibrpath/a/path objs"
+inf "        shared libraries are supported"
+inf "        options for compiling..... $sharedcccompopts $bytecccompopts"
+inf "        command for building...... $mksharedlib -o lib.so $mksharedlibrpath/a/path objs"
 else
-echo "        shared libraries not supported"
+inf "        shared libraries not supported"
 fi
 
-echo "Configuration for the native-code compiler:"
+inf "Configuration for the native-code compiler:"
 if test "$arch" = "none"; then
-  echo "        (not supported on this platform)"
+  inf "        (not supported on this platform)"
 else
   if test "$model" = "default"; then
-    echo "        hardware architecture..... $arch"
+    inf "        hardware architecture..... $arch"
   else
-    echo "        hardware architecture..... $arch ($model)"
+    inf "        hardware architecture..... $arch ($model)"
   fi
   if test "$system" = "unknown"; then : ; else
-  echo "        OS variant................ $system"
+  inf "        OS variant................ $system"
   fi
-  echo "        C compiler used........... $nativecc"
-  echo "        options for compiling..... $nativecccompopts"
-  echo "        options for linking....... $nativecclinkopts $cclibs"
-  echo "        assembler ................ $as"
-  echo "        preprocessed assembler ... $aspp"
+  inf "        C compiler used........... $nativecc"
+  inf "        options for compiling..... $nativecccompopts"
+  inf "        options for linking....... $nativecclinkopts $cclibs"
+  inf "        assembler ................ $as"
+  inf "        preprocessed assembler ... $aspp"
   if test "$asm_cfi_supported" = "true"; then
-  echo "        assembler supports CFI ... yes"
+  inf "        assembler supports CFI ... yes"
   else
-  echo "        assembler supports CFI ... no"
+  inf "        assembler supports CFI ... no"
   fi
-  echo "        native dynlink ........... $natdynlink"
+  inf "        native dynlink ........... $natdynlink"
   if test "$profiling" = "prof"; then
-  echo "        profiling with gprof ..... supported"
+  inf "        profiling with gprof ..... supported"
   else
-  echo "        profiling with gprof ..... not supported"
+  inf "        profiling with gprof ..... not supported"
   fi
 fi
 
 if test "$debugger" = "ocamldebugger"; then
-  echo "Source-level replay debugger: supported"
+  inf "Source-level replay debugger: supported"
 else
-  echo "Source-level replay debugger: not supported"
+  inf "Source-level replay debugger: not supported"
 fi
 
 if test "$debugruntime" = "runtimed"; then
-  echo "Debug runtime will be compiled and installed"
+  inf "Debug runtime will be compiled and installed"
 fi
 
-echo "Additional libraries supported:"
-echo "        $otherlibraries"
+inf "Additional libraries supported:"
+inf "        $otherlibraries"
 
-echo "Configuration for the \"num\" library:"
-echo "        target architecture ...... $bng_arch (asm level $bng_asm_level)"
+inf "Configuration for the \"num\" library:"
+inf "        target architecture ...... $bng_arch (asm level $bng_asm_level)"
 
 if $has_graph; then
-echo "Configuration for the \"graph\" library:"
-echo "        options for compiling .... $x11_include"
-echo "        options for linking ...... $x11_link"
+inf "Configuration for the \"graph\" library:"
+inf "        options for compiling .... $x11_include"
+inf "        options for linking ...... $x11_link"
 else
-echo "The \"graph\" library: not supported"
+inf "The \"graph\" library: not supported"
 fi
 
 if test $has_tk = true; then
-echo "Configuration for the \"labltk\" library:"
-echo "        use tcl/tk version ....... $tcl_version"
-echo "        options for compiling .... $tk_defs $tk_x11_include"
-echo "        options for linking ...... $tk_libs $tk_x11_libs"
+inf "Configuration for the \"labltk\" library:"
+inf "        use tcl/tk version ....... $tcl_version"
+inf "        options for compiling .... $tk_defs $tk_x11_include"
+inf "        options for linking ...... $tk_libs $tk_x11_libs"
 else
-echo "The \"labltk\" library: not supported"
+inf "The \"labltk\" library: not supported"
 fi
 
-echo
-echo "** OCaml configuration completed successfully **"
-echo
+inf
+inf "** OCaml configuration completed successfully **"
+inf
 
 if test ! -z "$MACOSX_DEPLOYMENT_TARGET"; then
-  echo "WARNING: the environment variable MACOSX_DEPLOYMENT_TARGET is set."
-  echo "This will probably prevent compiling the OCaml system."
+  wrn "The environment variable MACOSX_DEPLOYMENT_TARGET is set.\nThis will probably prevent compiling the OCaml system."
 fi
-- 
1.8.1.4

